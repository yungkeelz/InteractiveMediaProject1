import controlP5.*; 

Table peopleData_00_In; // Table for people in using level 00 building data
int maxPeople; // Maximum number of people for scaling
int numDots; // Number of dots to draw
PVector[] dots; // Array to store dot positions

ControlP5 cp5; // Controller
Slider timeSlider;
Textlabel[] tickLabels = new Textlabel[25];
int Time = 30;
int myColor = color(255, 255, 255);

int index = 0; // people count index




void setup() {
  size(800, 600); 
  frameRate(30); 
  
  //LOAD PEOPLE DATA - LEVEL 00
  peopleData_00_In = loadTable("https://eif-research.feit.uts.edu.au/api/csv/?rFromDate=2023-08-01T00%3A00&rToDate=2023-08-01T23%3A59%3A59&rFamily=people_sh&rSensor=CB11.PC00.06.West&rSubSensor=CB11.00.Wattle+In", "csv"); 
  
  //CONTROLLERS
  cp5 = new ControlP5(this); 
  
  timeSlider = cp5.addSlider("Time") // time slider
    .setPosition(100, 550)
    .setWidth(600)
    .setHeight(10)
    .setRange(0, 1440)
    .setValue(0)
    .setColorLabel(color(0))
    .setColorBackground(color(0, 0, 0));
    
  for (int i = 0; i <=24; i++) {
    tickLabels[i] = cp5.addTextlabel("label" + i)
                       .setText(str(i))
                       .setPosition(93 + i * (600/24), 570)
                       .setColorValue(0);                
  }
    
  //LEVEL SELECTION  
  cp5.addButton("Level 00")
    .setPosition(650, 40);
    
  cp5.addButton("Level 02")
     .setPosition(650, 60);
     
  cp5.addButton("Level 05") 
     .setPosition(650, 80); 
 
     
}


void draw() {
  
  if (index < peopleData_00_In.getRowCount()) {
    int y = peopleData_00_In.getInt(index, 1); // index is the row, 1 is the column with the data.
    println(y);
    index++;
  }
  
  Time = int(timeSlider.getValue()); // gives time variable
  
  // CHANGE COLOR OVER TIME FOR HEAT MAP
  float colour1 = map(Time, 1, 360, 0, 150);
  float colour2 = map(Time, 360, 720, 200, 0); 
  float colour3 = map(Time, 720, 1080, 300, 100);
  
  
  fill(colour1, colour2, colour3);
  
  //BACKGROUND
  background(0); 
  float newRectX = -0.1;
  float newRectY = -0.1;
  float newRectWidth = 800;
  float newRectHeight = 600;
  
  
  noStroke();
  rect(newRectX, newRectY, newRectWidth, newRectHeight);
  
  //HEADER
  fill(0); 
  textAlign(LEFT); 
  textSize(14);
  String csvData = "UTS BUILDING 11\n"; 
  csvData += "People Entered Through Here Today: " + numDots + "\n\n"; 
  csvData += "Hour: " + Time/60 + "\n"; 
  text(csvData, 90, 50);
  
  maxPeople = getMaxPeople(); 
  numDots = int(map(Time, 0, 255, 0, maxPeople)); 
  drawDots(); 
  
}


int getMaxPeople() {
  int max = 0;
  for (int i = 0; i < peopleData_00_In.getRowCount(); i++) {
    int numPeople = peopleData_00_In.getInt(i, 1); // second column has the number of people
    if (numPeople > max) {
      max = numPeople;
    }
  }
  return max;
}


void drawDots() {
  dots = new PVector[numDots];

  for (int i = 0; i < numDots; i++) {
    float x = random(100, width - 100); // building x-range
    float y = random(100, height - 100); // building y-range 
    dots[i] = new PVector(x, y);
    ellipse(x, y, 20, 20); // Draw a dot at the calculated position
  }
}


// LEVEL 00 Button
public void level00(int theValue) {
  
}

// LEVEL 02 Button
public void level02(int theValue) {
  
}

// LEVEL 05 Button
public void level05(int theValue) {
  
}














